 var colors = {
	blue: ["#FFFFD9", "#EDF8B1", "#C7E9B4", "#7FCDBB", "#41B6C4", "#1D91C0", "#225EA8", "#253494", "#081D58"],
	purple: ["#FFF7F3", "#FDE0DD", "#FCC5C0", "#FA9FB5", "#F768A1", "#DD3497", "#AE017E", "#7A0177", "#49006A"]
	}

var temp;

$(document).ready(function() {
    var zipList = document.getElementById("json-zips").value; 
    changeComplaint("Heating", zipList, colors["purple"]);
    $("#map path").hover(mousein,mouseout);
});

function colorZip(zip,color) {
  $("#" + zip).css("fill",color);
}

function mousein() {
  temp = $(this).css("fill");
  $(this).css("fill","#ff0000");
}

function mouseout() {
  $(this).css("fill",temp);
}

// this is a bit of a mess, but it sort of works
function changeComplaint(complaint, zips, colors) {
    zips = eval(zips);
    var zipCount = {
        zip: [],
        count: []
        };
    
    var zipComplaint = document.getElementById("json-zip-complaint").value; 
    
    for (var i = 0; i < zips.length; i++)
    {
        if (document.getElementById(zips[i]))
        {
            zipCount.zip.push(zips[i]);
            var zipAccess = zips[i]+" "+complaint;
            var jszipComplaint = JSON.parse(zipComplaint);
            zipCount.count.push(jszipComplaint[zipAccess]);
            }
        }
        
    var maxComplaint = Math.max.apply(Math, zipCount.count);
    console.log(JSON.stringify(maxComplaint));
    
    maxComplaint = 6015;
    
    var quantize = d3.scale.quantize()
    .domain([0, maxComplaint])
    .range(d3.range(9));
    
    for (var j = 0; j < zipCount.zip.length; j++)
    {
        //console.log(JSON.stringify(zipCount.count[j]));
        //console.log(JSON.stringify(quantize(zipCount.count[j])));
        
        if (document.getElementById(zipCount.zip[j]))
            console.log(JSON.stringify(zipCount.zip[j]));
            console.log(JSON.stringify(quantize(zipCount.count[j])));
            colorZip(zipCount.zip[j], colors[quantize(zipCount.count[j])]);
        }
    
    
}
